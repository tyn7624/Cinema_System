@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var userImage = User.FindFirst("UserImage")?.Value ?? ViewData["UserImage"] as string; ;
    var userFullName = User.FindFirst("FullName")?.Value ?? ViewData["UserFullname"] as string;
    var defaultImage = "/images/default-avatar.png";
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item d-flex align-items-center">
            @if (!string.IsNullOrEmpty(userImage) && userImage != defaultImage)
            {
                <img src="@userImage" alt="Profile Image" class="rounded-circle user-avatar me-2" />
            }
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @userFullName !
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link1" style="color:white; text-decoration:none" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<style>
    .user-avatar {
        width: 35px;
        height: 35px;
        object-fit: cover;
        border-radius: 50%;
       
    }
</style>
